/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.depoyonetim.arayuz;

import com.depoyonetim.islemler.*;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JFrame;

/**
 *
 * @author ASUS
 */
public class UrunGuncelle extends javax.swing.JFrame {

    VeriTabaniBaglantisi veriTabaniBaglantisi = new VeriTabaniBaglantisi();
    VeriIslemleri veriIslemleri = new VeriIslemleri();
    String id;
    String selected = "";
    int ixing = 1;

    public UrunGuncelle(String id, String barcodeNo, String productName, String stockAmount, String category, String brand, String purchase, String sale, String shelf, String bottomShelf) {
        initComponents();

        categorySelect.setSelectedIndex(-1);
        brandSelected.removeAllItems();
        comboBoxAddItem();
        this.id = id;
        this.codeNumberTxt.setText(barcodeNo);
        this.productNameTxt.setText(productName);
        this.stockAmount.setText(stockAmount);
        this.categorySelect.setSelectedItem(String.valueOf((Object) category));
        System.out.println(String.valueOf((Object) category));
        this.brandSelected.setSelectedItem(String.valueOf((Object) brand));
        System.out.println(String.valueOf((Object) brand));
        this.purchasePrice.setText(purchase);
        this.salePrice.setText(sale);
        this.shelfNoTxt.setText(shelf);
        this.bottomShelfNoTxt.setText(bottomShelf);
        this.setResizable(false);
        this.setLocation(veriIslemleri.StartScreenLocation(this.getBounds().getSize()));
    }

    /**
     * Creates new form UrunKayit
     */
    public UrunGuncelle() {
        initComponents();
        categorySelect.setSelectedIndex(-1);
        brandSelected.removeAllItems();
        this.setResizable(false);
        comboBoxAddItem();
        this.setLocation(veriIslemleri.StartScreenLocation(this.getBounds().getSize()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        productNameText = new javax.swing.JLabel();
        productNameTxt = new javax.swing.JTextField();
        codeNumberTxt = new javax.swing.JTextField();
        codeText = new javax.swing.JLabel();
        purchasePrice = new javax.swing.JTextField();
        categoryText = new javax.swing.JLabel();
        purshasePriceText = new javax.swing.JLabel();
        salePrice = new javax.swing.JTextField();
        brandText = new javax.swing.JLabel();
        salePriceText = new javax.swing.JLabel();
        stockAmount = new javax.swing.JTextField();
        stockAmountText = new javax.swing.JLabel();
        categorySelect = new javax.swing.JComboBox<>();
        brandSelected = new javax.swing.JComboBox<>();
        updateProductBtn = new javax.swing.JButton();
        myErrorMessage = new javax.swing.JLabel();
        bottomShelfNoTxt = new javax.swing.JTextField();
        shelfNoTxt = new javax.swing.JTextField();
        shelfNoText = new javax.swing.JLabel();
        bottomShelfNoText = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        optionAddAndEdit = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ürün Güncelle");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        productNameText.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        productNameText.setText("Ürün Adı :");

        productNameTxt.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N

        codeNumberTxt.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N

        codeText.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        codeText.setText("Barkod :");

        purchasePrice.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N

        categoryText.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        categoryText.setText("Kategori :");

        purshasePriceText.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        purshasePriceText.setText("Alış Fiyatı (TL) :");

        salePrice.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N

        brandText.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        brandText.setText("Marka :");

        salePriceText.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        salePriceText.setText("Satış Fiyatı (TL) :");

        stockAmount.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N

        stockAmountText.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        stockAmountText.setText("Stok (Adet) :");

        categorySelect.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        categorySelect.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                categorySelectİtemStateChanged(evt);
            }
        });
        categorySelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categorySelectActionPerformed(evt);
            }
        });

        brandSelected.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N

        updateProductBtn.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        updateProductBtn.setText("Ürün Güncelle");
        updateProductBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateProductBtnActionPerformed(evt);
            }
        });

        myErrorMessage.setForeground(new java.awt.Color(255, 0, 0));

        bottomShelfNoTxt.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N

        shelfNoTxt.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N

        shelfNoText.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        shelfNoText.setText("Raf No :");

        bottomShelfNoText.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        bottomShelfNoText.setText("Alt Raf No :");

        optionAddAndEdit.setText("Seçenek Ekle / Sil / Düzenle");
        optionAddAndEdit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                optionAddAndEditMouseClicked(evt);
            }
        });
        optionAddAndEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionAddAndEditActionPerformed(evt);
            }
        });
        jMenuBar1.add(optionAddAndEdit);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(shelfNoText)
                            .addComponent(shelfNoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bottomShelfNoText)
                            .addComponent(bottomShelfNoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(productNameText)
                                .addComponent(productNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(codeText)
                                .addComponent(codeNumberTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(categoryText)
                                .addComponent(categorySelect, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(purshasePriceText)
                                .addComponent(purchasePrice, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(brandText)
                                    .addGap(101, 101, 101))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(brandSelected, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(salePriceText)
                                .addComponent(salePrice, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(stockAmountText)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(stockAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(updateProductBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(myErrorMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(myErrorMessage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(codeText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(codeNumberTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(productNameText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(productNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(purshasePriceText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(purchasePrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(categoryText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(categorySelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(salePriceText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(salePrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(brandSelected, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(brandText)
                        .addGap(30, 30, 30)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bottomShelfNoText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bottomShelfNoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(shelfNoText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(shelfNoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(stockAmountText)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stockAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateProductBtn))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateProductBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateProductBtnActionPerformed

        if (productNameTxt.getText().trim().equals("") || codeNumberTxt.getText().trim().equals("") || purchasePrice.getText().trim().equals("") || stockAmount.getText().trim().equals("") || salePrice.getText().trim().equals("") || shelfNoTxt.getText().trim().equals("") || bottomShelfNoTxt.getText().trim().equals("")) {
            myErrorMessage.setText("Lütfen Tüm Alanları Doldurun");
        } else if (brandSelected.getSelectedIndex() == -1) {
            myErrorMessage.setText("Lütfen Kategori ve Marka Seçin");
        } else {
            int barcodeNo = Integer.valueOf(codeNumberTxt.getText());
            String productName = productNameTxt.getText();
            String category = String.valueOf(categorySelect.getSelectedItem());
            String brand = String.valueOf(brandSelected.getSelectedItem());
            int stockAmount = Integer.valueOf(this.stockAmount.getText());
            String shelf = shelfNoTxt.getText();
            String bottomShelf = bottomShelfNoTxt.getText();
            String purchasePrice = this.purchasePrice.getText();
            String salePrice = this.salePrice.getText();
            String sorgu = "UPDATE `productlist` SET `BarcodeNo` = '" + barcodeNo + "', `ProductName` = '" + productName + "', `StockAmount` = '" + stockAmount + "', `Category` = '" + category + "', `Brand` = '" + brand + "', `PurchasePrice` = '" + purchasePrice + "', `SalePrice` = '" + salePrice + "', `ShelfNo` = '" + shelf + "', `BottomShelfNo` = '" + bottomShelf + "' WHERE `productlist`.`Id` = " + Integer.valueOf(id);
            try {
                new VeriTabaniBaglantisi().guncelle(sorgu);
            } catch (Exception e) {
                e.printStackTrace();
            }

            myErrorMessage.setText("Ürün Başarıyla Güncellendi");
        }
    }//GEN-LAST:event_updateProductBtnActionPerformed

    private void categorySelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categorySelectActionPerformed

        comboBoxAddItem();

    }//GEN-LAST:event_categorySelectActionPerformed
    public void comboBoxAddItem() {
        if (ixing == 1) {
            try {
                ResultSet myRS = new VeriTabaniBaglantisi().baglanti("SELECT * FROM `category`");
                while (myRS.next()) {
                    String category = myRS.getString("CategoryName");
                    categorySelect.addItem(category);
                }

            } catch (SQLException ex) {
                ex.printStackTrace();
            }
            ixing--;
        }
        selected = String.valueOf(categorySelect.getSelectedItem());
        categoryWhitBrand(selected);
    }
    private void categorySelectİtemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_categorySelectİtemStateChanged
        //
    }//GEN-LAST:event_categorySelectİtemStateChanged

    private void optionAddAndEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optionAddAndEditActionPerformed
        //
    }//GEN-LAST:event_optionAddAndEditActionPerformed

    private void optionAddAndEditMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_optionAddAndEditMouseClicked
        new SecenekEkleSilDuzenle().setVisible(true);
    }//GEN-LAST:event_optionAddAndEditMouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public void categoryWhitBrand(String category) {
        brandSelected.removeAllItems();
        String sorgu = "SELECT * FROM brand WHERE CategoryName='" + category + "'";
        ResultSet categoryRs = veriTabaniBaglantisi.baglanti(sorgu);
        try {
            while (categoryRs.next()) {
                brandSelected.addItem(categoryRs.getString("BrandName").toString());
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
            System.out.println("Hata");
        }
    }

    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UrunGuncelle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UrunGuncelle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UrunGuncelle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UrunGuncelle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UrunGuncelle().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bottomShelfNoText;
    private javax.swing.JTextField bottomShelfNoTxt;
    private javax.swing.JComboBox<String> brandSelected;
    private javax.swing.JLabel brandText;
    private javax.swing.JComboBox<String> categorySelect;
    private javax.swing.JLabel categoryText;
    private javax.swing.JTextField codeNumberTxt;
    private javax.swing.JLabel codeText;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JLabel myErrorMessage;
    private javax.swing.JMenu optionAddAndEdit;
    private javax.swing.JLabel productNameText;
    private javax.swing.JTextField productNameTxt;
    private javax.swing.JTextField purchasePrice;
    private javax.swing.JLabel purshasePriceText;
    private javax.swing.JTextField salePrice;
    private javax.swing.JLabel salePriceText;
    private javax.swing.JLabel shelfNoText;
    private javax.swing.JTextField shelfNoTxt;
    private javax.swing.JTextField stockAmount;
    private javax.swing.JLabel stockAmountText;
    private javax.swing.JButton updateProductBtn;
    // End of variables declaration//GEN-END:variables
}
