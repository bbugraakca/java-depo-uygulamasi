/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.depoyonetim.arayuz;

import com.depoyonetim.islemler.*;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class SatisListele extends javax.swing.JFrame {

    VeriIslemleri veriIslemleri = new VeriIslemleri(); //referans atandı
    VeriTabaniBaglantisi veriTabaniBaglantisi = new VeriTabaniBaglantisi(); // referans atandı
    DefaultTableModel myModel = new DefaultTableModel(); //tablo model referansı atandı
    Object[] salesColumns = {"Id", "Müşteri Adı", "Ürün Adedi", "Toplam Ücret", "Satıcı Adı", "Tarih"}; // sütun başlaıkları liste objesi oluşturuldu
    Object[] salesRows = new Object[6];//Satılat objesi oluşturuldu
    static String sendCustomerName;
    static String sendDate;
    static String sellerName;
    String[] returnProduct = new String[2];
    private String id;

    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    /**
     * Creates new form UrunListele
     */
    public SatisListele() {
        initComponents();
        updateSalesTable();
        this.setLocation(veriIslemleri.StartScreenLocation(this.getBounds().getSize()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        saleTable = new javax.swing.JTable();
        deleteSaleBtn = new javax.swing.JButton();
        showSaleBtn = new javax.swing.JButton();
        updateSalesListBtn = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        SearchText = new javax.swing.JLabel();
        nameSearchTextField = new javax.swing.JTextField();
        nameText = new javax.swing.JLabel();
        sellerText = new javax.swing.JLabel();
        brandText = new javax.swing.JLabel();
        salesErrorMessage = new javax.swing.JLabel();
        sellerSearchTextField = new javax.swing.JTextField();
        dateSearchTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Satış Listesi");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        saleTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        saleTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saleTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(saleTable);

        deleteSaleBtn.setText("Satış İptal");
        deleteSaleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteSaleBtnActionPerformed(evt);
            }
        });

        showSaleBtn.setText("Satış İçeriği");
        showSaleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showSaleBtnActionPerformed(evt);
            }
        });

        updateSalesListBtn.setText("Satış Listesi Güncelle");
        updateSalesListBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateSalesListBtnActionPerformed(evt);
            }
        });

        SearchText.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        SearchText.setText("Arama");

        nameSearchTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameSearchTextFieldActionPerformed(evt);
            }
        });

        nameText.setText("İsim :");

        sellerText.setText("Satıcı :");

        brandText.setText("Tarih :");

        salesErrorMessage.setForeground(new java.awt.Color(255, 0, 0));

        sellerSearchTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sellerSearchTextFieldActionPerformed(evt);
            }
        });

        dateSearchTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateSearchTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(salesErrorMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 629, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(16, 16, 16))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(159, Short.MAX_VALUE)
                        .addComponent(nameText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nameSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(sellerText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sellerSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(brandText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(SearchText)))
                .addContainerGap(159, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(deleteSaleBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(showSaleBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(updateSalesListBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(SearchText)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameText)
                    .addComponent(nameSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sellerText)
                    .addComponent(brandText)
                    .addComponent(sellerSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(salesErrorMessage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteSaleBtn)
                    .addComponent(showSaleBtn)
                    .addComponent(updateSalesListBtn))
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateSalesListBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateSalesListBtnActionPerformed
        updateSalesTable();
    }//GEN-LAST:event_updateSalesListBtnActionPerformed

    private void showSaleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showSaleBtnActionPerformed
        int selected = saleTable.getSelectedRow();
        if (selected == -1) {
            if (saleTable.getRowCount() == 0) {
                System.out.println("Listede Silinecek Ürün Yok");
            } else {
                System.out.println("Lütfen Silinecek Dosya Seçin");
            }
        } else {
            new SatisDetay().setVisible(true);
        }


    }//GEN-LAST:event_showSaleBtnActionPerformed

    private void saleTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saleTableMouseClicked
        setId(myModel.getValueAt(saleTable.getSelectedRow(), 0).toString());
        sendCustomerName = myModel.getValueAt(saleTable.getSelectedRow(), 1).toString();
        sendDate = myModel.getValueAt(saleTable.getSelectedRow(), 5).toString();
        sellerName = myModel.getValueAt(saleTable.getSelectedRow(), 4).toString();


    }//GEN-LAST:event_saleTableMouseClicked

    private void deleteSaleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteSaleBtnActionPerformed
        String dateRs = null;
        int selected = saleTable.getSelectedRow();
        if (selected == -1) {
            if (saleTable.getRowCount() == 0) {
                salesErrorMessage.setText("Listede İptal Edilecek Satış Yok");
                System.out.println("Listede İptal Edilecek Satış Yok");
            } else {
                salesErrorMessage.setText("Lütfen İptal Edilecek Satışı Seçin");
                System.out.println("Lütfen İptal Edilecek Satışı Seçin");
            }
        } else {
            // İptal Edilecek Satış Fonksiyonu Buraya Yazılcak
            dateRs = String.valueOf(myModel.getValueAt(saleTable.getSelectedRow(), 5));
            String sorgu = "DELETE FROM sales WHERE Id=" + Integer.valueOf(myModel.getValueAt(saleTable.getSelectedRow(), 0).toString());
            veriTabaniBaglantisi.sil(sorgu);
            salesErrorMessage.setText("Satış İptal Edildi");

            // Ürün iptalinde stokların geri yüklenmesini ve satıcaların cirolarından düşmesini sağlar
        }
        //ReturnProduct işlemleri
        String sorgu = "SELECT Id, StockAmount FROM saleproducts WHERE Date='" + dateRs + "'";
        ResultSet rs = veriTabaniBaglantisi.baglanti(sorgu);
        LinkedList<String> listId = new LinkedList<String>();
        LinkedList<String> listStock = new LinkedList<String>();
        LinkedList<String> listStockAmount = new LinkedList<String>();

        try {
            while (rs.next()) {
                String idRs = String.valueOf(rs.getString("Id"));
                String stockAmounts = String.valueOf(rs.getString("StockAmount"));
                listId.add(idRs);
                listStock.add(stockAmounts);
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        int j = 1;
        int k = 0;
        int ikinci = 0;
        int ucuncu = 0;
        for (int l = 0; l < listId.size(); l++) {
            String valueId = listId.get(l);
            String sorguString = "SELECT StockAmount FROM productlist WHERE Id=" + valueId;
            ResultSet stockRs = veriTabaniBaglantisi.baglanti(sorguString);
            try {
                while (stockRs.next()) {
                    listStockAmount.add(stockRs.getString("StockAmount"));
                }
            } catch (SQLException ex) {
                Logger.getLogger(SatisListele.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        for (int i = 0; i < listId.size(); i++) {
            String ilk = listId.get(i);
            j--;
            for (; j < 1; ++j) {
                ikinci = Integer.valueOf(listStock.get(k));
                ucuncu = Integer.valueOf(listStockAmount.get(k));

                int totalStock = ikinci + ucuncu;
                System.out.println("İlk: " + ilk + " - İkincisi: " + ikinci);
                stockUpdate(totalStock, ilk);
                k++;
            }
        }
        updateSalesTable();


    }//GEN-LAST:event_deleteSaleBtnActionPerformed
    public void stockUpdate(int totalStock, String id) {
        String sorguAddStock = "UPDATE `productlist` SET `StockAmount` = '" + totalStock + "' WHERE `productlist`.`Id` = " + id;
        veriTabaniBaglantisi.guncelle(sorguAddStock);
    }

    public void guncellemeFonksiyonu(String sorgu) {
        myModel.setRowCount(0);

        ResultSet myRs = veriTabaniBaglantisi.baglanti(sorgu);
        myModel.setColumnIdentifiers(salesColumns);
        try {
            while (myRs.next()) {
                salesRows[0] = myRs.getString("Id");
                salesRows[1] = myRs.getString("CustomerName");
                salesRows[2] = myRs.getString("SaleAmount");
                salesRows[3] = myRs.getString("TotalPrice");
                salesRows[4] = myRs.getString("SellerName");
                salesRows[5] = myRs.getString("Date");

                myModel.addRow(salesRows);

            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        saleTable.setModel(myModel);
    }
    private void nameSearchTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameSearchTextFieldActionPerformed
        String customerNameString = nameSearchTextField.getText();
        String sorgu = "SELECT * FROM sales WHERE CustomerName like '%" + customerNameString + "%'";
        guncellemeFonksiyonu(sorgu);
    }//GEN-LAST:event_nameSearchTextFieldActionPerformed

    private void sellerSearchTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sellerSearchTextFieldActionPerformed
        String sellerName = sellerSearchTextField.getText();
        String sorgu = "SELECT * FROM sales WHERE SellerName like '%" + sellerName + "%'";
        guncellemeFonksiyonu(sorgu);
    }//GEN-LAST:event_sellerSearchTextFieldActionPerformed

    private void dateSearchTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateSearchTextFieldActionPerformed
        String date = dateSearchTextField.getText();
        String sorgu = "SELECT * FROM sales WHERE Date like '" + date + "%'";
        guncellemeFonksiyonu(sorgu);
    }//GEN-LAST:event_dateSearchTextFieldActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public void updateSalesTable() {
        myModel.setRowCount(0);

        String sorgu = "SELECT * FROM sales";
        ResultSet myRs = veriTabaniBaglantisi.baglanti(sorgu);
        myModel.setColumnIdentifiers(salesColumns); // oject içerisinde tanımladığımız kolon adlarını myModele set eder.
        try {
            while (myRs.next()) {
                salesRows[0] = myRs.getString("Id");
                salesRows[1] = myRs.getString("CustomerName");
                salesRows[2] = myRs.getString("SaleAmount");
                double totalPrice = Double.valueOf(myRs.getString("TotalPrice"));
                salesRows[3] = veriIslemleri.priceFormat(totalPrice);
                salesRows[4] = myRs.getString("SellerName");
                salesRows[5] = myRs.getString("Date");

                //
                myModel.addRow(salesRows);
            }

        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        saleTable.setModel(myModel);
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SatisListele.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SatisListele.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SatisListele.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SatisListele.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SatisListele().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel SearchText;
    private javax.swing.JLabel brandText;
    private javax.swing.JTextField dateSearchTextField;
    private javax.swing.JButton deleteSaleBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField nameSearchTextField;
    private javax.swing.JLabel nameText;
    private javax.swing.JTable saleTable;
    private javax.swing.JLabel salesErrorMessage;
    private javax.swing.JTextField sellerSearchTextField;
    private javax.swing.JLabel sellerText;
    private javax.swing.JButton showSaleBtn;
    private javax.swing.JButton updateSalesListBtn;
    // End of variables declaration//GEN-END:variables
}
