/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.depoyonetim.arayuz;

import com.depoyonetim.islemler.*;
import com.depoyonetim.islemler.VeriTabaniBaglantisi;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class SatisSayfasi extends javax.swing.JFrame {

    VeriIslemleri veriIslemleri = new VeriIslemleri();
    VeriTabaniBaglantisi veriTabaniBaglantisi = new VeriTabaniBaglantisi();
    DefaultTableModel myModel = new DefaultTableModel();
    Object[] productColumns = {"Id", "Barkod No", "Ürün İsmi", "Stok Adedi", "Kategori", "Marka", "Alış Fiyatı (TL)", "Satış Fiyatı (TL)", "Raf No", "Alt Raf No"};
    Object[] producRows = new Object[10];
    Object[] customerComboBox = new Object[1];

    static String customer;
    private String customerString;
    private String id;
    private String barcodeNo;
    private String productName;
    private String stockAmount;
    private String category;
    private String brand;
    private double purchase;
    private double sale;
    private String shelf;
    private String bottomShelf;

    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public String getBarcodeNo() {
        return barcodeNo;
    }

    public void setBarcodeNo(String barcodeNo) {
        this.barcodeNo = barcodeNo;
    }

    public String getProductName() {
        return productName;
    }

    public void setProductName(String productName) {
        this.productName = productName;
    }

    public String getStockAmount() {
        return stockAmount;
    }

    public void setStockAmount(String stockAmount) {
        this.stockAmount = stockAmount;
    }

    public String getCategory() {
        return category;
    }

    public void setCategory(String category) {
        this.category = category;
    }

    public String getBrand() {
        return brand;
    }

    public void setBrand(String brand) {
        this.brand = brand;
    }

    public double getPurchase() {
        return purchase;
    }

    public void setPurchase(double purchase) {
        this.purchase = purchase;
    }

    public double getSale() {
        return sale;
    }

    public void setSale(double sale) {
        this.sale = sale;
    }

    public String getShelf() {
        return shelf;
    }

    public void setShelf(String shelf) {
        this.shelf = shelf;
    }

    public String getBottomShelf() {
        return bottomShelf;
    }

    public void setBottomShelf(String bottomShelf) {
        this.bottomShelf = bottomShelf;
    }

    public String getCustomerString() {
        return customerString;
    }

    public void setCustomerString(String customerString) {
        this.customerString = customerString;
    }

    /**
     * Creates new form UrunListele
     */
    public SatisSayfasi() {
        initComponents();
        updateProductTable();
        customerComboBoxUpdate();
        this.setLocation(veriIslemleri.StartScreenLocation(this.getBounds().getSize()));

        new Thread(new Runnable() {
            @Override
            public void run() {
            }
        }).start();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        productTable = new javax.swing.JTable();
        saleHistoryBtn = new javax.swing.JButton();
        addToCart = new javax.swing.JButton();
        showCart = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        searchText = new javax.swing.JLabel();
        barcodeText = new javax.swing.JLabel();
        barcodeSearchTextField = new javax.swing.JTextField();
        nameSearchTextField = new javax.swing.JTextField(5);
        nameText = new javax.swing.JLabel();
        categoryText = new javax.swing.JLabel();
        brandText = new javax.swing.JLabel();
        productErrorMessage = new javax.swing.JLabel();
        categorySearchTextField = new javax.swing.JTextField();
        brandSearchTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        comboBox = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        addAmount = new javax.swing.JTextField();
        cartProductCount = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Satış Sayfası");
        setLocation(new java.awt.Point(150, 110));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        productTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        productTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                productTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(productTable);

        saleHistoryBtn.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        saleHistoryBtn.setText("Satış Geçmişi");
        saleHistoryBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saleHistoryBtnActionPerformed(evt);
            }
        });

        addToCart.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        addToCart.setText("Sepete Ekle");
        addToCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToCartActionPerformed(evt);
            }
        });

        showCart.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        showCart.setText("Sepeti Görüntüle");
        showCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showCartActionPerformed(evt);
            }
        });

        searchText.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        searchText.setText("Arama");

        barcodeText.setText("Barkod No :");

        barcodeSearchTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                barcodeSearchTextFieldActionPerformed(evt);
            }
        });

        nameSearchTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameSearchTextFieldActionPerformed(evt);
            }
        });

        nameText.setText("İsim :");

        categoryText.setText("Kategori :");

        brandText.setText("Marka :");

        productErrorMessage.setForeground(new java.awt.Color(255, 0, 0));

        categorySearchTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categorySearchTextFieldActionPerformed(evt);
            }
        });

        brandSearchTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brandSearchTextFieldActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText("Müşteri Seçiniz :");

        comboBox.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        comboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("Adet :");

        addAmount.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        addAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAmountActionPerformed(evt);
            }
        });

        cartProductCount.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        cartProductCount.setForeground(new java.awt.Color(0, 153, 0));
        cartProductCount.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(productErrorMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 629, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 812, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(saleHistoryBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                                        .addGap(1, 1, 1))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(showCart, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(addToCart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(addAmount, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel3)
                                                    .addComponent(jLabel2))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE))
                                            .addComponent(comboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(cartProductCount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                        .addGap(20, 20, 20))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(searchText)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(103, Short.MAX_VALUE)
                        .addComponent(barcodeText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(barcodeSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(nameText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nameSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(categoryText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(categorySearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(brandText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(brandSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 103, Short.MAX_VALUE)))
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchText)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(barcodeText)
                    .addComponent(barcodeSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameText)
                    .addComponent(nameSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(categoryText)
                    .addComponent(brandText)
                    .addComponent(categorySearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(brandSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(productErrorMessage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cartProductCount)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addToCart)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(showCart)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(saleHistoryBtn))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 342, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addToCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToCartActionPerformed
        int selectedRow = productTable.getSelectedRow();
        if (addAmount.getText().trim().equals("")) {
            productErrorMessage.setText("Lütfen Adet Bilgisi Girin");
            return;
        } else {
            setStockAmount(addAmount.getText());
            String sorgu = "INSERT INTO `cart` (`Id`, `BarcodeNo`, `ProductName`, `StockAmount`, `Category`, `Brand`, `PurchasePrice`, `SalePrice`, `ShelfNo`, `BottomShelfNo`, `CustomerName`) VALUES ('" + getId() + "', '" + getBarcodeNo() + "', '" + getProductName() + "', '" + getStockAmount() + "', '" + getCategory() + "', '" + getBrand() + "', '" + getPurchase() + "', '" + getSale() + "', '" + getShelf() + "', '" + getBottomShelf() + "', '" + getCustomerString() + "')";
            veriTabaniBaglantisi.ekle(sorgu);
            addAmount.setText("");
        }
        new UrunSepeti().updateCartable();
        new UrunSepeti().totalPrice();
        customer = comboBox.getSelectedItem().toString();
        new UrunSepeti().rowCount();
        int count = new UrunSepeti().rowCount;
        cartProductCount.setText("Sepette (" + count + ") Ürün Var");
        myModel.removeRow(selectedRow);
    }//GEN-LAST:event_addToCartActionPerformed

    private void showCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showCartActionPerformed
        new UrunSepeti().setVisible(true);
    }//GEN-LAST:event_showCartActionPerformed

    private void saleHistoryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saleHistoryBtnActionPerformed
        new SatisListele().setVisible(true);

    }//GEN-LAST:event_saleHistoryBtnActionPerformed

    private void productTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productTableMouseClicked
        setId(myModel.getValueAt(productTable.getSelectedRow(), 0).toString());
        setBarcodeNo(myModel.getValueAt(productTable.getSelectedRow(), 1).toString());
        setProductName(myModel.getValueAt(productTable.getSelectedRow(), 2).toString());
        setCategory(myModel.getValueAt(productTable.getSelectedRow(), 4).toString());
        setBrand(myModel.getValueAt(productTable.getSelectedRow(), 5).toString());
        String purchasePrice = myModel.getValueAt(productTable.getSelectedRow(), 6).toString();
        setPurchase(veriIslemleri.priceReturnFormat(purchasePrice));
        String salePrice = myModel.getValueAt(productTable.getSelectedRow(), 7).toString();
        setSale(veriIslemleri.priceReturnFormat(salePrice));
        setShelf(myModel.getValueAt(productTable.getSelectedRow(), 8).toString());
        setBottomShelf(myModel.getValueAt(productTable.getSelectedRow(), 9).toString());


    }//GEN-LAST:event_productTableMouseClicked
    public void guncellemeFonksiyonu(String sorgu) {
        myModel.setRowCount(0);

        ResultSet myRs = veriTabaniBaglantisi.baglanti(sorgu);
        myModel.setColumnIdentifiers(productColumns);
        try {
            while (myRs.next()) {
                producRows[0] = myRs.getString("Id");
                producRows[1] = myRs.getString("BarcodeNo");
                producRows[2] = myRs.getString("ProductName");
                producRows[3] = myRs.getString("StockAmount");
                producRows[4] = myRs.getString("Category");
                producRows[5] = myRs.getString("Brand");
                producRows[6] = myRs.getString("PurchasePrice").replace('.', ',');
                producRows[7] = myRs.getString("SalePrice").replace('.', ',');
                producRows[8] = myRs.getString("ShelfNo");
                producRows[9] = myRs.getString("BottomShelfNo");

                myModel.addRow(producRows);

            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        productTable.setModel(myModel);
    }
    private void barcodeSearchTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_barcodeSearchTextFieldActionPerformed
        String barcodeSearch = barcodeSearchTextField.getText();
        String sorgu = "SELECT * FROM productlist WHERE BarcodeNo like '" + barcodeSearch + "%'";
        guncellemeFonksiyonu(sorgu);
    }//GEN-LAST:event_barcodeSearchTextFieldActionPerformed

    private void nameSearchTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameSearchTextFieldActionPerformed
        String productNameString = nameSearchTextField.getText();
        String sorgu = "SELECT * FROM productlist WHERE ProductName like '%" + productNameString + "%'";
        guncellemeFonksiyonu(sorgu);
    }//GEN-LAST:event_nameSearchTextFieldActionPerformed

    private void categorySearchTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categorySearchTextFieldActionPerformed
        String categoryName = categorySearchTextField.getText();
        String sorgu = "SELECT * FROM productlist WHERE Category like '%" + categoryName + "%'";
        guncellemeFonksiyonu(sorgu);
    }//GEN-LAST:event_categorySearchTextFieldActionPerformed

    private void brandSearchTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brandSearchTextFieldActionPerformed
        String brand = brandSearchTextField.getText();
        String sorgu = "SELECT * FROM productlist WHERE Brand like '%" + brand + "%'";
        guncellemeFonksiyonu(sorgu);
    }//GEN-LAST:event_brandSearchTextFieldActionPerformed

    private void comboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxActionPerformed
        setCustomerString(comboBox.getSelectedItem().toString());
    }//GEN-LAST:event_comboBoxActionPerformed

    private void addAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addAmountActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public void customerComboBoxUpdate() {
        comboBox.removeAllItems();
        String sorgu = "SELECT * FROM customerlist";
        ResultSet comboRs = veriTabaniBaglantisi.baglanti(sorgu);

        try {
            while (comboRs.next()) {
                String item = comboRs.getString("isim_sirket_kisi");
                comboBox.addItem(item);
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }

    }

    public void updateProductTable() {
        myModel.setRowCount(0);
        String sorgu = "SELECT * FROM productlist";
        ResultSet myRs = veriTabaniBaglantisi.baglanti(sorgu);
        myModel.setColumnIdentifiers(productColumns); // oject içerisinde tanımladığımız kolon adlarını myModele set eder.
        try {
            while (myRs.next()) {
                producRows[0] = myRs.getString("Id");
                producRows[1] = myRs.getString("BarcodeNo");
                producRows[2] = myRs.getString("ProductName");
                producRows[3] = myRs.getString("StockAmount");
                producRows[4] = myRs.getString("Category");
                producRows[5] = myRs.getString("Brand");
                producRows[6] = new DecimalFormat("###,###.##").format(Double.valueOf(myRs.getString("PurchasePrice")));
                producRows[7] = new DecimalFormat("###,###.##").format(Double.valueOf(myRs.getString("SalePrice")));
                producRows[8] = myRs.getString("ShelfNo");
                producRows[9] = myRs.getString("BottomShelfNo");
                //
                myModel.addRow(producRows);
            }

        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        productTable.setModel(myModel);
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SatisSayfasi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SatisSayfasi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SatisSayfasi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SatisSayfasi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SatisSayfasi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addAmount;
    private javax.swing.JButton addToCart;
    private javax.swing.JTextField barcodeSearchTextField;
    private javax.swing.JLabel barcodeText;
    private javax.swing.JTextField brandSearchTextField;
    private javax.swing.JLabel brandText;
    private javax.swing.JLabel cartProductCount;
    private javax.swing.JTextField categorySearchTextField;
    private javax.swing.JLabel categoryText;
    private javax.swing.JComboBox<String> comboBox;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField nameSearchTextField;
    private javax.swing.JLabel nameText;
    private javax.swing.JLabel productErrorMessage;
    private javax.swing.JTable productTable;
    private javax.swing.JButton saleHistoryBtn;
    private javax.swing.JLabel searchText;
    private javax.swing.JButton showCart;
    // End of variables declaration//GEN-END:variables
}
