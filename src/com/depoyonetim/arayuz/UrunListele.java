/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.depoyonetim.arayuz;

import com.depoyonetim.islemler.*;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class UrunListele extends javax.swing.JFrame {

    VeriIslemleri veriIslemleri = new VeriIslemleri();
    VeriTabaniBaglantisi veriTabaniBaglantisi = new VeriTabaniBaglantisi();
    DefaultTableModel myModel = new DefaultTableModel();
    Object[] productColumns = {"Id", "Barkod No", "Ürün İsmi", "Stok Adedi", "Kategori", "Marka", "Alış Fiyatı (TL)", "Satış Fiyatı (TL)", "Raf No", "Alt Raf No", "Tarih"};
    Object[] productRows = new Object[11];
    
    
    private String id;
    private String barcodeNo;
    private String productName;
    private String stockAmount;
    private String category="";
    private String brand;
    private String purchase;
    private String sale;
    private String shelf;
    private String bottomShelf;
    
    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public String getBarcodeNo() {
        return barcodeNo;
    }

    public void setBarcodeNo(String barcodeNo) {
        this.barcodeNo = barcodeNo;
    }

    public String getProductName() {
        return productName;
    }

    public void setProductName(String productName) {
        this.productName = productName;
    }

    public String getStockAmount() {
        return stockAmount;
    }

    public void setStockAmount(String stockAmount) {
        this.stockAmount = stockAmount;
    }

    public String getCategory() {
        return category;
    }

    public void setCategory(String category) {
        this.category = category;
    }

    public String getBrand() {
        return brand;
    }

    public void setBrand(String brand) {
        this.brand = brand;
    }

    public String getPurchase() {
        return purchase;
    }

    public void setPurchase(String purchase) {
        this.purchase = purchase;
    }

    public String getSale() {
        return sale;
    }

    public void setSale(String sale) {
        this.sale = sale;
    }

    public String getShelf() {
        return shelf;
    }

    public void setShelf(String shelf) {
        this.shelf = shelf;
    }

    public String getBottomShelf() {
        return bottomShelf;
    }

    public void setBottomShelf(String bottomShelf) {
        this.bottomShelf = bottomShelf;
    }
    /**
     * Creates new form UrunListele
     */
    public UrunListele() {
        initComponents();
        updateProductTable();
        this.setLocation(veriIslemleri.StartScreenLocation(this.getBounds().getSize()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        productTable = new javax.swing.JTable();
        updateProductBtn = new javax.swing.JButton();
        deleteProductBtn = new javax.swing.JButton();
        addProductBtn = new javax.swing.JButton();
        updateProductListBtn = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        barcodeText = new javax.swing.JLabel();
        barcodeSearchTextField = new javax.swing.JTextField();
        nameSearchTextField = new javax.swing.JTextField();
        nameText = new javax.swing.JLabel();
        categoryText = new javax.swing.JLabel();
        brandText = new javax.swing.JLabel();
        productErrorMessage = new javax.swing.JLabel();
        categorySearchTextField = new javax.swing.JTextField();
        brandSearchTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ürün Listesi");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        productTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        productTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                productTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(productTable);

        updateProductBtn.setText("Ürün Güncelle");
        updateProductBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateProductBtnActionPerformed(evt);
            }
        });

        deleteProductBtn.setText("Ürün Sil");
        deleteProductBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteProductBtnActionPerformed(evt);
            }
        });

        addProductBtn.setText("Ürün Ekle");
        addProductBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProductBtnActionPerformed(evt);
            }
        });

        updateProductListBtn.setText("Ürün Listesi Güncelle");
        updateProductListBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateProductListBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setText("Arama");

        barcodeText.setText("Barkod No :");

        barcodeSearchTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                barcodeSearchTextFieldActionPerformed(evt);
            }
        });

        nameSearchTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameSearchTextFieldActionPerformed(evt);
            }
        });

        nameText.setText("İsim :");

        categoryText.setText("Kategori :");

        brandText.setText("Marka :");

        productErrorMessage.setForeground(new java.awt.Color(255, 0, 0));

        categorySearchTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categorySearchTextFieldActionPerformed(evt);
            }
        });

        brandSearchTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brandSearchTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(productErrorMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 629, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(16, 16, 16))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(barcodeText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(barcodeSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(nameText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nameSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(categoryText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(categorySearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(brandText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(691, 691, 691)))
                .addComponent(brandSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(updateProductBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(deleteProductBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(addProductBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(updateProductListBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(barcodeText)
                    .addComponent(barcodeSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameText)
                    .addComponent(nameSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(categoryText)
                    .addComponent(brandText)
                    .addComponent(categorySearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(brandSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(productErrorMessage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateProductBtn)
                    .addComponent(deleteProductBtn)
                    .addComponent(addProductBtn)
                    .addComponent(updateProductListBtn))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addProductBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProductBtnActionPerformed
        new UrunEkle().setVisible(true);
    }//GEN-LAST:event_addProductBtnActionPerformed

    private void updateProductListBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateProductListBtnActionPerformed
        updateProductTable();
    }//GEN-LAST:event_updateProductListBtnActionPerformed

    private void deleteProductBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteProductBtnActionPerformed
        int selected = productTable.getSelectedRow();
        if (selected == -1) {
            if (productTable.getRowCount() == 0) {
                System.out.println("Listede Silinecek Ürün Yok");
            } else {
                System.out.println("Lütfen Silinecek Dosya Seçin");
            }
        } else {
            String sorgu = "DELETE FROM productlist WHERE Id=" + Integer.valueOf(getId());
            veriTabaniBaglantisi.sil(sorgu);
            productErrorMessage.setText("Ürün Silindi");
            updateProductTable();
        }

    }//GEN-LAST:event_deleteProductBtnActionPerformed

    private void productTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productTableMouseClicked
        setId(myModel.getValueAt(productTable.getSelectedRow(), 0).toString());
        setBarcodeNo(myModel.getValueAt(productTable.getSelectedRow(), 1).toString());
        setProductName(myModel.getValueAt(productTable.getSelectedRow(), 2).toString());
        setStockAmount(myModel.getValueAt(productTable.getSelectedRow(), 3).toString());
        setCategory(myModel.getValueAt(productTable.getSelectedRow(), 4).toString());
        setBrand(myModel.getValueAt(productTable.getSelectedRow(), 5).toString());
        setPurchase(myModel.getValueAt(productTable.getSelectedRow(), 6).toString());
        setSale(myModel.getValueAt(productTable.getSelectedRow(), 7).toString());
        setShelf(myModel.getValueAt(productTable.getSelectedRow(), 8).toString());
        setBottomShelf(myModel.getValueAt(productTable.getSelectedRow(), 9).toString());

    }//GEN-LAST:event_productTableMouseClicked

    private void updateProductBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateProductBtnActionPerformed
        int selected = productTable.getSelectedRow();
        if (selected == -1) {
            if (productTable.getRowCount() == 0) {
                productErrorMessage.setText("Listede Güncellenecek Ürün Yok");
                System.out.println("Listede Güncellenecek Ürün Yok");
            } else {
                productErrorMessage.setText("Lütfen Güncellenecek Ürün Seçiniz");
                System.out.println("Lütfen Güncellenecek Ürün Seçiniz");
            }
        } else {
            UrunGuncelle urunGuncelle = new UrunGuncelle(getId(), getBarcodeNo(), getProductName(), getStockAmount(), getCategory(), getBrand(), getPurchase(), getSale(), getShelf(), getBottomShelf());
            urunGuncelle.setVisible(true);
        }


    }//GEN-LAST:event_updateProductBtnActionPerformed
    public void guncellemeFonksiyonu(String sorgu) {
        myModel.setRowCount(0);

        ResultSet myRs = veriTabaniBaglantisi.baglanti(sorgu);
        myModel.setColumnIdentifiers(productColumns);
        try {
            while (myRs.next()) {
                double purchasePrice = Double.valueOf(myRs.getString("PurchasePrice"));
                double salePrice = Double.valueOf(myRs.getString("SalePrice"));
                productRows[0] = myRs.getString("Id");
                productRows[1] = myRs.getString("BarcodeNo");
                productRows[2] = myRs.getString("ProductName");
                productRows[3] = myRs.getString("StockAmount");
                productRows[4] = myRs.getString("Category");
                productRows[5] = myRs.getString("Brand");
                productRows[6] = veriIslemleri.priceFormat(purchasePrice);
                productRows[7] = veriIslemleri.priceFormat(salePrice);
                productRows[8] = myRs.getString("ShelfNo");
                productRows[9] = myRs.getString("BottomShelfNo");
                productRows[10] = myRs.getString("Date");

                myModel.addRow(productRows);

            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        productTable.setModel(myModel);
    }
    private void barcodeSearchTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_barcodeSearchTextFieldActionPerformed
        String barcodeSearch = barcodeSearchTextField.getText();
        String sorgu = "SELECT * FROM productlist WHERE BarcodeNo like '" + barcodeSearch + "%'";
        guncellemeFonksiyonu(sorgu);
    }//GEN-LAST:event_barcodeSearchTextFieldActionPerformed

    private void nameSearchTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameSearchTextFieldActionPerformed
        String productNameString = nameSearchTextField.getText();
        String sorgu = "SELECT * FROM productlist WHERE ProductName like '%" + productNameString + "%'";
        guncellemeFonksiyonu(sorgu);
    }//GEN-LAST:event_nameSearchTextFieldActionPerformed

    private void categorySearchTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categorySearchTextFieldActionPerformed
        String categoryName = categorySearchTextField.getText();
        String sorgu = "SELECT * FROM productlist WHERE Category like '%" + categoryName + "%'";
        guncellemeFonksiyonu(sorgu);
    }//GEN-LAST:event_categorySearchTextFieldActionPerformed

    private void brandSearchTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brandSearchTextFieldActionPerformed
        String brand = brandSearchTextField.getText();
        String sorgu = "SELECT * FROM productlist WHERE Brand like '%" + brand + "%'";
        guncellemeFonksiyonu(sorgu);
    }//GEN-LAST:event_brandSearchTextFieldActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public void updateProductTable() {
        myModel.setRowCount(0);

        String sorgu = "SELECT * FROM productlist";
        ResultSet myRs = veriTabaniBaglantisi.baglanti(sorgu);
        myModel.setColumnIdentifiers(productColumns); // oject içerisinde tanımladığımız kolon adlarını myModele set eder.
        try {
            while (myRs.next()) {
                double purchasePrice = Double.valueOf(myRs.getString("PurchasePrice"));
                double salePrice = Double.valueOf(myRs.getString("SalePrice"));
                productRows[0] = myRs.getString("Id");
                productRows[1] = myRs.getString("BarcodeNo");
                productRows[2] = myRs.getString("ProductName");
                productRows[3] = myRs.getString("StockAmount");
                productRows[4] = myRs.getString("Category");
                productRows[5] = myRs.getString("Brand");
                productRows[6] = veriIslemleri.priceFormat(purchasePrice);
                productRows[7] = veriIslemleri.priceFormat(salePrice);
                productRows[8] = myRs.getString("ShelfNo");
                productRows[9] = myRs.getString("BottomShelfNo");
                //
                myModel.addRow(productRows);
            }

        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        productTable.setModel(myModel);
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UrunListele.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UrunListele.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UrunListele.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UrunListele.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UrunListele().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addProductBtn;
    private javax.swing.JTextField barcodeSearchTextField;
    private javax.swing.JLabel barcodeText;
    private javax.swing.JTextField brandSearchTextField;
    private javax.swing.JLabel brandText;
    private javax.swing.JTextField categorySearchTextField;
    private javax.swing.JLabel categoryText;
    private javax.swing.JButton deleteProductBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField nameSearchTextField;
    private javax.swing.JLabel nameText;
    private javax.swing.JLabel productErrorMessage;
    private javax.swing.JTable productTable;
    private javax.swing.JButton updateProductBtn;
    private javax.swing.JButton updateProductListBtn;
    // End of variables declaration//GEN-END:variables
}
