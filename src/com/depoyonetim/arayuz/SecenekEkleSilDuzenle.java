/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.depoyonetim.arayuz;

import com.depoyonetim.islemler.*;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class SecenekEkleSilDuzenle extends javax.swing.JFrame {

    VeriTabaniBaglantisi veriTabaniBaglantisi = new VeriTabaniBaglantisi();
    VeriIslemleri veriIslemleri = new VeriIslemleri();
    DefaultTableModel myCategoryModel = new DefaultTableModel();
    DefaultTableModel myBrandModel = new DefaultTableModel();
    Object[] myCategoryRow = new Object[1];
    Object[] myCategoryColumn = {"Kategoriler"};
    Object[] myBrandRow = new Object[1];
    Object[] myBrandColumn = {"Markalar"};
    Object[] myBrandId = new Object[1];
    String brandValue;
    String brandNewValue;
    String categoryValue;
    String categoryNewValue;

    /**
     * Creates new form SecenekEkleSilDuzenle
     */
    public SecenekEkleSilDuzenle() {
        initComponents();
        categoryTableUpdate();
        //brandTableUpdate();
        this.setLocation(veriIslemleri.StartScreenLocation(this.getBounds().getSize()));
        brandTextField.setEnabled(false);
        this.setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        categoryTable = new javax.swing.JTable();
        categoryText = new javax.swing.JLabel();
        categoryTextField = new javax.swing.JTextField();
        addCategoryBtn = new javax.swing.JButton();
        editCategoryBtn = new javax.swing.JButton();
        deleteCategoryBtn = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane3 = new javax.swing.JScrollPane();
        BrandTable = new javax.swing.JTable();
        deleteBrandBtn = new javax.swing.JButton();
        brandText = new javax.swing.JLabel();
        brandTextField = new javax.swing.JTextField();
        addBrandBtn = new javax.swing.JButton();
        editBrandBtn = new javax.swing.JButton();
        categoryErrorMessage = new javax.swing.JLabel();
        brandErrorMessage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Seçenek Ekle Düzenle");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        categoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kategori Adı"
            }
        ));
        categoryTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                categoryTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(categoryTable);

        categoryText.setText("Kategori Adı :");

        addCategoryBtn.setText("Kategori Ekle");
        addCategoryBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCategoryBtnActionPerformed(evt);
            }
        });

        editCategoryBtn.setText("Kategori Düzenle");
        editCategoryBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editCategoryBtnActionPerformed(evt);
            }
        });

        deleteCategoryBtn.setText("Kategori Sil");
        deleteCategoryBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteCategoryBtnActionPerformed(evt);
            }
        });

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        BrandTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Marka Adı"
            }
        ));
        BrandTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BrandTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(BrandTable);

        deleteBrandBtn.setText("Marka Sil");
        deleteBrandBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBrandBtnActionPerformed(evt);
            }
        });

        brandText.setText("Marka Adı :");

        addBrandBtn.setText("Marka Ekle");
        addBrandBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBrandBtnActionPerformed(evt);
            }
        });

        editBrandBtn.setText("Marka Düzenle");
        editBrandBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBrandBtnActionPerformed(evt);
            }
        });

        categoryErrorMessage.setForeground(new java.awt.Color(255, 0, 0));

        brandErrorMessage.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(categoryText)
                    .addComponent(categoryTextField)
                    .addComponent(addCategoryBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editCategoryBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                    .addComponent(deleteCategoryBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(categoryErrorMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(brandText)
                    .addComponent(brandTextField)
                    .addComponent(addBrandBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editBrandBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deleteBrandBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                    .addComponent(brandErrorMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(categoryText)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(categoryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(categoryErrorMessage)
                                .addGap(3, 3, 3)
                                .addComponent(addCategoryBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(editCategoryBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(deleteCategoryBtn))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(brandText)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(brandTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(brandErrorMessage)
                                .addGap(4, 4, 4)
                                .addComponent(addBrandBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(editBrandBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(deleteBrandBtn)))
                        .addGap(0, 32, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void categoryTableUpdate() {
        myCategoryModel.setRowCount(0);
        ResultSet myRs = veriTabaniBaglantisi.baglanti("SELECT * FROM category");
        myCategoryModel.setColumnIdentifiers(myCategoryColumn);
        try {
            while (myRs.next()) {
                String category = myRs.getString("CategoryName");
                myBrandId[0] = myRs.getString("Id");
                myCategoryRow[0] = myRs.getString("CategoryName");

                myCategoryModel.addRow(myCategoryRow);
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        categoryTable.setModel(myCategoryModel);
    }

    public void brandTableUpdate() {
        
        myBrandModel.setRowCount(0);
        String sorgu = "SELECT BrandName FROM `brand` WHERE CategoryName='" + myCategoryModel.getValueAt(categoryTable.getSelectedRow(), 0).toString() + "' ";
        ResultSet brandRs = veriTabaniBaglantisi.baglanti(sorgu);

        myBrandModel.setColumnIdentifiers(myBrandColumn);
        try {
            while (brandRs.next()) {
                myBrandRow[0] = brandRs.getString("BrandName");
                myBrandModel.addRow(myBrandRow);
            }
        } catch (SQLException ex) {
            Logger.getLogger(SecenekEkleSilDuzenle.class.getName()).log(Level.SEVERE, null, ex);
        }
        BrandTable.setModel(myBrandModel);
    }
    private void editBrandBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBrandBtnActionPerformed
        brandNewValue = brandTextField.getText();
        String sorgu = "UPDATE `brand` SET `BrandName` = '" + brandNewValue + "' WHERE BrandName ='" + brandValue + "' ";
        veriTabaniBaglantisi.guncelle(sorgu);
        brandErrorMessage.setText("Marka Düzenlendi");
        brandTableUpdate();
    }//GEN-LAST:event_editBrandBtnActionPerformed

    private void addBrandBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBrandBtnActionPerformed
        int secim = categoryTable.getSelectedRow();
        if (secim == -1) {
            if (categoryTable.getRowCount() == 0) {
                brandErrorMessage.setText("Lütfen Önce Kategori Ekleyin");
            } else {
                brandErrorMessage.setText("Lütfen Bir Kategori Seçin");
            }
        } else {
            String brandName = brandTextField.getText();
            String sorgu = "INSERT INTO `brand` (`BrandName`, `CategoryName`) VALUES ('" + brandName + "','" + myCategoryModel.getValueAt(categoryTable.getSelectedRow(), 0).toString() + "')";
            veriTabaniBaglantisi.ekle(sorgu);
            brandErrorMessage.setText("Marka Eklendi");
            brandTableUpdate();
            new UrunEkle().comboBoxAddItem();
            brandTextField.setText("");
        }


    }//GEN-LAST:event_addBrandBtnActionPerformed

    private void BrandTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BrandTableMouseClicked
        brandValue = myBrandModel.getValueAt(BrandTable.getSelectedRow(), 0).toString();
        brandTextField.setText(brandValue);

    }//GEN-LAST:event_BrandTableMouseClicked

    private void deleteBrandBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBrandBtnActionPerformed
        String sorgu = "DELETE FROM `brand` WHERE BrandName='" + brandValue + "'";
        veriTabaniBaglantisi.sil(sorgu);
        brandErrorMessage.setText("Marka Silindi");
        brandTableUpdate();
    }//GEN-LAST:event_deleteBrandBtnActionPerformed

    private void addCategoryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCategoryBtnActionPerformed
        String categoryName = categoryTextField.getText();
        String sorgu = "INSERT INTO `category` (`CategoryName`) VALUES ('" + categoryName + "')";
        veriTabaniBaglantisi.ekle(sorgu);
        categoryErrorMessage.setText("Kategori Eklendi");
        categoryTableUpdate();
    }//GEN-LAST:event_addCategoryBtnActionPerformed

    private void editCategoryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editCategoryBtnActionPerformed
        categoryNewValue = categoryTextField.getText();
        String sorgu = "UPDATE `category` SET `CategoryName` = '" + categoryNewValue + "' WHERE CategoryName ='" + categoryValue + "' ";
        veriTabaniBaglantisi.guncelle(sorgu);
        categoryErrorMessage.setText("Kategori Güncellendi");
        categoryTableUpdate();
    }//GEN-LAST:event_editCategoryBtnActionPerformed

    private void categoryTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_categoryTableMouseClicked
        brandTextField.setEnabled(true);
        categoryValue = myCategoryModel.getValueAt(categoryTable.getSelectedRow(), 0).toString();
        categoryTextField.setText(categoryValue);
        myBrandModel.setRowCount(0);
        String sorgu = "SELECT BrandName FROM `brand` WHERE CategoryName='" + myCategoryModel.getValueAt(categoryTable.getSelectedRow(), 0).toString() + "' ";
        ResultSet brandRs = veriTabaniBaglantisi.baglanti(sorgu);

        myBrandModel.setColumnIdentifiers(myBrandColumn);
        try {
            while (brandRs.next()) {
                myBrandRow[0] = brandRs.getString("BrandName");
                myBrandModel.addRow(myBrandRow);
            }
        } catch (SQLException ex) {
            Logger.getLogger(SecenekEkleSilDuzenle.class.getName()).log(Level.SEVERE, null, ex);
        }
        BrandTable.setModel(myBrandModel);
    }//GEN-LAST:event_categoryTableMouseClicked

    private void deleteCategoryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteCategoryBtnActionPerformed
        String sorgu = "DELETE FROM `category` WHERE CategoryName='" + categoryValue + "'";
        veriTabaniBaglantisi.sil(sorgu);
        categoryErrorMessage.setText("Kategori Silindi");
        categoryTableUpdate();

    }//GEN-LAST:event_deleteCategoryBtnActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SecenekEkleSilDuzenle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SecenekEkleSilDuzenle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SecenekEkleSilDuzenle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SecenekEkleSilDuzenle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SecenekEkleSilDuzenle().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable BrandTable;
    private javax.swing.JButton addBrandBtn;
    private javax.swing.JButton addCategoryBtn;
    private javax.swing.JLabel brandErrorMessage;
    private javax.swing.JLabel brandText;
    private javax.swing.JTextField brandTextField;
    private javax.swing.JLabel categoryErrorMessage;
    private javax.swing.JTable categoryTable;
    private javax.swing.JLabel categoryText;
    private javax.swing.JTextField categoryTextField;
    private javax.swing.JButton deleteBrandBtn;
    private javax.swing.JButton deleteCategoryBtn;
    private javax.swing.JButton editBrandBtn;
    private javax.swing.JButton editCategoryBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator2;
    // End of variables declaration//GEN-END:variables
}
